{"version":3,"file":"static/webpack/static/development/pages/login.js.3a19c0fc821ccb593a91.hot-update.js","sources":["webpack:///./pages/login.js"],"sourcesContent":["import React, { Component } from 'react'\nimport Router from 'next/router'\nimport styled, { keyframes } from 'styled-components'\nimport { Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst Loading = styled.div`\n  width: 20px;\n  height: 20px;\n  border: 2px solid #ecf0f1;\n  border-radius: 50%;\n  border-top: 2px solid transparent;\n  animation: ${rotate} 2s linear infinite;\n`\n\nconst Background = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #ccc;\n  background-image: url('https://i.pinimg.com/originals/96/f7/33/96f733006534aa2da5b48aeaa24aa5a4.jpg');\n  background-position: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n  height: 100vh;\n  width: 100vw;\n`\n\nconst LoginCard = styled.form`\n  box-sizing: border-box;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  padding: 40px;\n  width: 450px;\n  height: 300px;\n  background: white;\n  input {\n    box-sizing: border-box;\n    height: 35px;\n    width: 100%;\n    padding: 5px;\n    margin-bottom: 10px;\n    font-size: 14px;\n    text-align: center;\n    border: ${props =>\n      props.error ? '2px solid #e74c3c' : '2px solid transpareent'};\n  }\n  button {\n    margin-top: 40px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 35px;\n    padding: 5px;\n    background-color: #1abc9c;\n    border: none;\n    font-size: 14px;\n    text-align: center;\n    color: white;\n    &:hover {\n      cursor: pointer;\n      background-color: #16a085;\n    }\n  }\n`\n\nexport default class Login extends Component {\n  state = {\n    username: '',\n    password: ''\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n  login = e => {\n    e.preventDefault()\n    if (this.state.username.length > 0 && this.state.password.length > 0) {\n      Router.push('/dashboard')\n    }\n  }\n  render() {\n    const { username, password } = this.state\n    return (\n      <Background>\n        <Mutation\n          mutation={gql`\n            mutation {\n              signIn(login: ${username}, password: ${password}) {\n                token\n              }\n            }\n          `}\n        >\n          {(signIn, { loading, error, data }) => {\n            return (\n              <LoginCard\n                error={error}\n                onSubmit={e => {\n                  e.preventDefault()\n                  signIn(username, password)\n                }}\n              >\n                <input\n                  name=\"username\"\n                  type=\"text\"\n                  placeholder=\"Username\"\n                  onChange={this.handleChange}\n                />\n                <input\n                  name=\"password\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  onChange={this.handleChange}\n                />\n                <button>{loading ? <Loading /> : 'Login'}</button>\n              </LoginCard>\n            )\n          }}\n        </Mutation>\n      </Background>\n    )\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAUA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAkBA;AAAA;AACA;AAsBA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAIA;;;;AA1DA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}